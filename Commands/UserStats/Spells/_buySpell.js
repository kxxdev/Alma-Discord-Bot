import {
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  EmbedBuilder,
  StringSelectMenuBuilder,
} from 'discord.js';
import UserSpells from '../../../Models/UsersSpels/UserSpells.js';
import { Spells, SpellsActionTypes } from '../../../Config/spells-config.js';

import { GetDesignConfig } from '../../../Config/design-config.js';
const DesignConfig = GetDesignConfig();

const command = async (interaction) => {
  // –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–∏.
  const { client, channel, member } = interaction;

  // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –∫–æ–º–∞–Ω–¥—ã.
  const interactionValues = interaction.customId?.split('-') || '1-1-1';

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
  const page = Number(interactionValues[2]) || 1;

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π.
  const userSpells = await UserSpells.get({ userId: member.id });

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
  const spellsConfig = Spells;

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å –∫–∞–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ —Å—á–∏—Ç–∞—Ç—å –æ—Ä—É–∂–∏—è.
  const minIndex = (page - 1) * 5;

  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –ø–æ –Ω–æ–º–µ—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
  const spells = spellsConfig.slice(minIndex, minIndex + 5);

  // –°–æ–∑–¥–∞–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç –º–µ–Ω—é.
  const selectMenuOptions = [];

  // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è.
  let text = '';

  // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ä—É–∂–∏–π –Ω–∞ –∞–ø–≥—Ä–µ–π–¥ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Å–µ–ª–µ–∫—Ç –º–µ–Ω—é –∑–∞–≥–ª—É—à–∫—É.
  if (spells.length === 0) {
    text = '–í –º–∏—Ä–µ –µ—â–µ –Ω–µ—Ç –º–∞–≥–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–∞–∫-–Ω–∏–±—É–¥—å –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑..';
    selectMenuOptions.push({
      label: `–ù–µ—Ç –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π..`,
      description: `–í –º–∏—Ä–µ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–∞–≥–∏–∏..`,
      emoji: DesignConfig.emojis.denie,
      value: `none`,
    });
  }

  // –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–º –æ—Ä—É–∂–∏—è–º.
  else {
    for (let i = 0; i < spells.length; i++) {
      const spell = spells[i];

      // –ó–∞–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–ª–∏–Ω–∞–Ω–Ω–∏–∏.
      let valuesInfo = '';
      if (spell.levels[0].damage) {
        valuesInfo = `${valuesInfo} ${DesignConfig.guildEmojis.damage} –£—Ä–æ–Ω: \`${spell.levels[0].damage}\`\n`;
      }
      if (spell.levels[0].duration) {
        valuesInfo = `${valuesInfo} ${DesignConfig.guildEmojis.duration} –•–æ–¥–æ–≤: \`${spell.levels[0].duration}\`\n`;
      }
      if (spell.levels[0].bonus) {
        valuesInfo = `${valuesInfo} ${DesignConfig.guildEmojis.bonus} –ë–æ–Ω—É—Å: \`${spell.levels[0].bonus}\`\n`;
      }

      text = `${text}
**${i + 1}) ${spell.id} | ${SpellsActionTypes[spell.action]}**
–¶–µ–Ω–∞: \`${spell.price}\` ${DesignConfig.guildEmojis.manaStones}
*${spell.description}*
${valuesInfo}
`;

      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ–ª –≤ —Å–µ–ª–µ–∫—Ç –º–µ–Ω—é.
      selectMenuOptions.push({
        label: `${i + 1}) ${spell.id} | ${SpellsActionTypes[spell.action]}`,
        description: `${spell.description}\n`,
        emoji: DesignConfig.guildEmojis.actions[spell.action],
        value: `${spell.id}`,
      });
    }
  }

  // –°–æ–∑–¥–∞–µ–º —Å–µ–ª–µ–∫—Ç –º–µ–Ω—é.
  const selectMenuSpells = new ActionRowBuilder().addComponents(
    new StringSelectMenuBuilder()
      .setCustomId(`buySpellsSelect-${member.id}`)
      .setPlaceholder(`${DesignConfig.emojis.sell} –ö—É–ø–∏—Ç—å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ..`)
      .addOptions(selectMenuOptions)
  );

  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
  const spellsButton = new ButtonBuilder()
    .setCustomId(`activeSpells-${member.id}`)
    .setLabel(`${DesignConfig.emojis.spells} –ú–æ–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è`)
    .setStyle(ButtonStyle.Success);
  const buttons = new ActionRowBuilder().addComponents(spellsButton);

  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
  if (minIndex != 0) {
    const prevPage = new ButtonBuilder()
      .setCustomId(`buySpellPrev-${member.id}-${page - 1}`)
      .setLabel('‚óÄÔ∏è')
      .setStyle(ButtonStyle.Secondary);

    buttons.addComponents(prevPage);
  }

  // –ï—Å–ª–∏ –æ—Ä—É–∂–∏–π –±–æ–ª—å—à–µ —á–µ–º –≤—ã–≤–µ–ª–æ—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.
  if (spells.length > minIndex + 5) {
    const nextPage = new ButtonBuilder()
      .setCustomId(`buySpellNext-${member.id}-${page + 1}`)
      .setLabel('‚ñ∂Ô∏è')
      .setStyle(ButtonStyle.Secondary);

    buttons.addComponents(nextPage);
  }

  const embed = new EmbedBuilder()
    .setTitle(
      `${DesignConfig.guildEmojis.spells} –ü–æ–∫—É–ø–∫–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π ${DesignConfig.guildEmojis.spells}`
    )
    .setDescription(
      `–£ –≤–∞—Å \`${userSpells.manaStones}\` ${DesignConfig.guildEmojis.manaStones}.
      
${text}

üîΩ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å üîΩ`
    )
    .setColor(DesignConfig.colors.spells)
    .setFooter({ text: `–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${page}` })
    .setThumbnail(member.displayAvatarURL())
    .setImage(DesignConfig.footer.purpleGifLineURL);

  // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç—Ñ–µ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
  const ephemeral = channel.id != client.channelsConfig.spamChannelId;

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç.
  if (interaction.executeType === 'interactionCreate') {
    return await interaction
      .update({
        embeds: [embed],
        components: [selectMenuSpells, buttons],
        ephemeral,
      })
      .catch((err) => console.log(err));
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç.
  await interaction
    .reply({
      embeds: [embed],
      components: [selectMenuSpells, buttons],
      ephemeral: false,
    })
    .catch((err) => console.log(err));
};

export default command;
